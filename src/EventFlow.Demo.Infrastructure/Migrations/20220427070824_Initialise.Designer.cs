// <auto-generated />
using System;
using EventFlow.Demo.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EventFlow.Demo.Infrastructure.Migrations
{
    [DbContext(typeof(DemoContext))]
    [Migration("20220427070824_Initialise")]
    partial class Initialise
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EventFlow.Demo.Core.Applications.ReadModels.ApplicationReadModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EnvironmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("EventFlow.Demo.Core.Applications.ReadModels.ComponentReadModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("EventFlow.Demo.Core.Users.ReadModels.UserReadModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EventFlow.EntityFramework.EventStores.EventEntity", b =>
                {
                    b.Property<long>("GlobalSequenceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AggregateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AggregateSequenceNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GlobalSequenceNumber");

                    b.HasIndex("AggregateId", "AggregateSequenceNumber")
                        .IsUnique()
                        .HasFilter("[AggregateId] IS NOT NULL");

                    b.ToTable("EventEntity");
                });

            modelBuilder.Entity("EventFlow.Demo.Core.Applications.ReadModels.ComponentReadModel", b =>
                {
                    b.HasOne("EventFlow.Demo.Core.Applications.ReadModels.ApplicationReadModel", null)
                        .WithMany("Components")
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("EventFlow.Demo.Core.Applications.ReadModels.ApplicationReadModel", b =>
                {
                    b.Navigation("Components");
                });
#pragma warning restore 612, 618
        }
    }
}
